Index: tests/example.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/example.py b/tests/example.py
--- a/tests/example.py	(revision 1ac4aced145a4b53cf6ecea58405ce419f0c3e70)
+++ b/tests/example.py	(date 1675638926935)
@@ -1,0 +1,72 @@
+#!/usr/bin/python3
+"""Defines unittests for models/engine/file_storage.py."""
+
+import unittest
+from pathlib import Path
+
+import models
+from models.amenity import Amenity
+from models.city import City
+from models.engine.file_storage import FileStorage
+from models.base_model import BaseModel
+import os
+import json
+
+from models.place import Place
+from models.review import Review
+from models.state import State
+from models.user import User
+
+
+class TestFileStorage(unittest.TestCase):
+    def setUp(self):
+        self.storage = FileStorage()
+
+    def tearDown(self):
+        """Code to execute after tests are executed"""
+        try:
+            os.remove("file.json")
+        except IOError:
+            pass
+
+        try:
+            os.rename("tmp.json", "file.json")
+        except IOError:
+            pass
+
+        FileStorage._FileStorage__objects = {}
+
+    def test_all(self):
+        self.assertEqual(type(self.storage.all()), dict)
+
+    def test_instance(self):
+        self.assertIsInstance(models.storage, FileStorage)
+
+
+def save(self):
+    with open(self.__file_path, 'w') as outfile:
+        new_obj = {}
+        for key, value in self.__objects.items():
+            new_obj.update({key: value.to_dict()})
+        json.dump(new_obj, outfile)
+
+
+def reload(self):
+    classes = {"Amenity": Amenity,
+               "BaseModel": BaseModel,
+               "City": City,
+               "Place": Place,
+               "Review": Review,
+               "State": State,
+               "User": User}
+    my_file = Path(self.__file_path)
+    if my_file.is_file():
+        with open(self.__file_path) as json_file:
+            loads = json.load(json_file)
+            for key, value in loads.items():
+                obj = classes[value["__class__"]](**value)
+                self.__objects.update({key: obj})
+
+
+if __name__ == '__main__':
+    unittest.main()
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1675638926990)
+++ b/.idea/vcs.xml	(date 1675638926990)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/inspectionProfiles/Project_Default.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
new file mode 100644
--- /dev/null	(date 1675638926982)
+++ b/.idea/inspectionProfiles/Project_Default.xml	(date 1675638926982)
@@ -0,0 +1,19 @@
+<component name="InspectionProjectProfileManager">
+  <profile version="1.0">
+    <option name="myName" value="Project Default" />
+    <inspection_tool class="PyPep8NamingInspection" enabled="true" level="WEAK WARNING" enabled_by_default="true">
+      <option name="ignoredErrors">
+        <list>
+          <option value="N802" />
+        </list>
+      </option>
+    </inspection_tool>
+    <inspection_tool class="PyUnresolvedReferencesInspection" enabled="true" level="WARNING" enabled_by_default="true">
+      <option name="ignoredIdentifiers">
+        <list>
+          <option value="dict.append" />
+        </list>
+      </option>
+    </inspection_tool>
+  </profile>
+</component>
\ No newline at end of file
Index: .idea/alu-AirBnB_clone.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/alu-AirBnB_clone.iml b/.idea/alu-AirBnB_clone.iml
new file mode 100644
--- /dev/null	(date 1675638926977)
+++ b/.idea/alu-AirBnB_clone.iml	(date 1675638926977)
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+  <component name="PyDocumentationSettings">
+    <option name="format" value="PLAIN" />
+    <option name="myDocStringFormat" value="Plain" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1675638926965)
+++ b/.idea/modules.xml	(date 1675638926965)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/alu-AirBnB_clone.iml" filepath="$PROJECT_DIR$/.idea/alu-AirBnB_clone.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1675638926958)
+++ b/.idea/misc.xml	(date 1675638926958)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.10 (HelloWorld)" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
--- /dev/null	(date 1675638926946)
+++ b/.idea/inspectionProfiles/profiles_settings.xml	(date 1675638926946)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
